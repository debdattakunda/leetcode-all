package main.java.problem_389;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * @author: Debdatta Kunda
 * @problem-statement: Given two strings s and t which consist of only lowercase letters.
 * <p>
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * <p>
 * Find the letter that was added in t.
 * <p>
 * Example:
 * <p>
 * Input:
 * s = "abcd"
 * t = "abcde"
 * <p>
 * Output:
 * e
 * <p>
 * Explanation:
 * 'e' is the letter that was added.
 */

class Solution {

    public char findTheDifferenceApproachOne(String s, String t) {

        char[] sArr = s.toCharArray();
        char[] tArr = t.toCharArray();
        Arrays.sort(sArr);
        Arrays.sort(tArr);
        int index = 0;
        while (index < sArr.length) {
            if (sArr[index] == tArr[index]) {
                index++;
                continue;
            } else {
                return tArr[index];
            }
        }
        return tArr[index];
    }

    public char findTheDifferenceApproachtwo(String s, String t) {

        char result = ' ';
        Map<Character, Integer> sMap = new HashMap<>();
        Map<Character, Integer> tMap = new HashMap<>();
        for(char sChar : s.toCharArray()) {
            sMap.put(sChar, sMap.getOrDefault(sChar, 0) + 1);
        }
        for(char tChar : t.toCharArray()) {
            tMap.put(tChar, tMap.getOrDefault(tChar, 0) + 1);
        }
        for(Map.Entry<Character, Integer> entry : tMap.entrySet()) {
            if(sMap.containsKey(entry.getKey()) && sMap.get(entry.getKey()).equals(entry.getValue())) {
                continue;
            } else {
                result = entry.getKey();
            }
        }
        return result;
    }
}
